import csv


# Function for Question NO: A
def read_csv(branch_id):
    filename = "sales_" + str(branch_id) + ".csv"
    # sales_dict = {day: sales}
    sales_dict = {}
    # cost_dict = {day: cost}
    cost_dict = {}
    try:
        with open(filename) as file_obj:
            heading = next(file_obj)
            reader_obj = csv.reader(file_obj)
            for row in reader_obj:
                cost_dict[int(row[0])] = int(row[2])
                sales_dict[int(row[0])] = int(row[1])
    except FileNotFoundError:
        msg = "Sorry, the file " + filename + " does not exist."
        print(msg)
    print("Answer : ")
    print("sales dictionary is ", sales_dict)
    print("cost dictionary is ", cost_dict)
    return cost_dict, sales_dict


# Function for Question NO: B
def total_profit(cost, sales, start_day, end_day):
    print(cost, "\n", sales, "\n", start_day, "\n", end_day, "\n")
    profit = 0
    for day in range(start_day, end_day + 1):
        profit += sales[day] - cost[day]

    try:
        if profit < 0:
            raise ValueError("Profit is negative")
    except ValueError as e:
        print(e)

    return profit


# Function for Question NO: C
def minimum_sales_day(sales1, sales2, sales3, day):
    min_sale = sales1[day]
    min_id = 1
    if min_sale < sales2[day]:
        min_id = 2
        min_sale = sales2[day]
    if min_sale < sales3[day]:
        min_id = 3
        min_sale = sales3[day]
    return min_id


# Question D : Main function to test all of your functions.
def main():
    # Testing the question: A
    print("Question A : Reads all the lines inside the corresponding sales_BranchID.csv")
    print("Read the record from branch 1")
    cost1, sales1 = read_csv(1)
    print("Read the record from branch 2")
    cost2, sales2 = read_csv(2)
    print("Read the record from branch 3")
    cost3, sales3 = read_csv(2)
    print("========================================================================\n")

    # Testing the question: B
    print("Question B : Calculate the total profit of that branch over this date range ")
    branch = int(input("Enter the branch you want to calculate the total profit of that branch over the date range: "))

    start_day = int(input("Enter the starting day: "))
    end_day = int(input("Enter the end day: "))
    profit = 0
    if branch == 1:
        profit = total_profit(cost1, sales1, start_day, end_day)
    elif branch == 2:
        profit = total_profit(cost2, sales2, start_day, end_day)
    elif branch == 3:
        profit = total_profit(cost2, sales2, start_day, end_day)
    else:
        print("Enter the valid branch Id")
        return

    # Testing the question: C
    print("Answer : The profit from day " + str(start_day) + " to " + str(end_day) + " is ", profit)
    print("========================================================================\n")

    print("Question C : prints to the screen the branch ID with the minimum sales amount on a day")
    if len(sales1) == 0:
        print("sales record of the branch 1 is empty")
    if len(sales2) == 0:
        print("sales record of the branch 2 is empty")
    if len(sales3) == 0:
        print("sales record of the branch 3 is empty")

    day = int(input("Enter the day on which you want see minimum sales branch: "))
    res = minimum_sales_day(sales1, sales2, sales3, day)
    print("Answer : The branch with the minimum sale at day " + str(day) + " is branch", res)


if __name__ == '__main__':
    main()
